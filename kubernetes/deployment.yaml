# kubernetes/deployment.yaml - Kubernetes Deployment
# ============================================================================
apiVersion: v1
kind: Namespace
metadata:
  name: master-generators

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: app-config
  namespace: master-generators
data:
  API_PORT: "8000"
  STREAMLIT_PORT: "8501"
  REDIS_URL: "redis://redis-service:6379"
  DATABASE_URL: "postgresql://master_gen:secure_password@postgres-service:5432/master_generators"

---
apiVersion: v1
kind: Secret
metadata:
  name: app-secrets
  namespace: master-generators
type: Opaque
data:
  SECRET_KEY: "eW91ci1zZWNyZXQta2V5LWNoYW5nZS1pbi1wcm9kdWN0aW9u"  # base64 encoded
  POSTGRES_PASSWORD: "c2VjdXJlX3Bhc3N3b3Jk"  # base64 encoded

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: master-generators-app
  namespace: master-generators
  labels:
    app: master-generators
spec:
  replicas: 3
  selector:
    matchLabels:
      app: master-generators
  template:
    metadata:
      labels:
        app: master-generators
    spec:
      containers:
      - name: app
        image: master-generators:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 8000
          name: api
        - containerPort: 8501
          name: streamlit
        envFrom:
        - configMapRef:
            name: app-config
        - secretRef:
            name: app-secrets
        resources:
          requests:
            memory: "1Gi"
            cpu: "500m"
          limits:
            memory: "2Gi"
            cpu: "1000m"
        livenessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 10
          periodSeconds: 5
        volumeMounts:
        - name: models-volume
          mountPath: /app/models
        - name: data-volume
          mountPath: /app/data
      volumes:
      - name: models-volume
        persistentVolumeClaim:
          claimName: models-pvc
      - name: data-volume
        persistentVolumeClaim:
          claimName: data-pvc

---
apiVersion: v1
kind: Service
metadata:
  name: master-generators-service
  namespace: master-generators
spec:
  selector:
    app: master-generators
  ports:
  - name: api
    port: 8000
    targetPort: 8000
  - name: streamlit
    port: 8501
    targetPort: 8501
  type: LoadBalancer

---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: redis
  namespace: master-generators
spec:
  serviceName: redis-service
  replicas: 1
  selector:
    matchLabels:
      app: redis
  template:
    metadata:
      labels:
        app: redis
    spec:
      containers:
      - name: redis
        image: redis:7-alpine
        ports:
        - containerPort: 6379
        volumeMounts:
        - name: redis-data
          mountPath: /data
  volumeClaimTemplates:
  - metadata:
      name: redis-data
    spec:
      accessModes: ["ReadWriteOnce"]
      resources:
        requests:
          storage: 10Gi

---
apiVersion: v1
kind: Service
metadata:
  name: redis-service
  namespace: master-generators
spec:
  selector:
    app: redis
  ports:
  - port: 6379
    targetPort: 6379
  clusterIP: None

---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: postgres
  namespace: master-generators
spec:
  serviceName: postgres-service
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
      - name: postgres
        image: postgres:15-alpine
        ports:
        - containerPort: 5432
        env:
        - name: POSTGRES_USER
          value: master_gen
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: app-secrets
              key: POSTGRES_PASSWORD
        - name: POSTGRES_DB
          value: master_generators
        volumeMounts:
        - name: postgres-data
          mountPath: /var/lib/postgresql/data
  volumeClaimTemplates:
  - metadata:
      name: postgres-data
    spec:
      accessModes: ["ReadWriteOnce"]
      resources:
        requests:
          storage: 20Gi

---
apiVersion: v1
kind: Service
metadata:
  name: postgres-service
  namespace: master-generators
spec:
  selector:
    app: postgres
  ports:
  - port: 5432
    targetPort: 5432
  clusterIP: None

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: models-pvc
  namespace: master-generators
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 50Gi

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: data-pvc
  namespace: master-generators
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 100Gi

---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: master-generators-hpa
  namespace: master-generators
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: master-generators-app
  minReplicas: 2
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: master-generators-ingress
  namespace: master-generators
  annotations:
    kubernetes.io/ingress.class: nginx
    cert-manager.io/cluster-issuer: letsencrypt-prod
    nginx.ingress.kubernetes.io/proxy-body-size: "100m"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "300"
spec:
  tls:
  - hosts:
    - api.master-generators.com
    - app.master-generators.com
    secretName: master-generators-tls
  rules:
  - host: api.master-generators.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: master-generators-service
            port:
              number: 8000
  - host: app.master-generators.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: master-generators-service
            port:
              number: 8501
